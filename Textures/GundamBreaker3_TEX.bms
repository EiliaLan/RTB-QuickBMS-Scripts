# Gundam Breaker 3 - TEX to DDS Converter
# Written by Random Talking Bush
# This pretty much identical to my WoFF script, other than the addition of four (blank?) bytes.

endian big

goto 0x80 0
getdstring ZLIBCheck 0x04 0

if ZLIBCheck == "BILZ"

get FILESIZE long 0
get FILESIZEZ long 0

if FILESIZE != FILESIZEZ
clog MEMORY_FILE 0x90 FILESIZEZ FILESIZE 0
else
log MEMORY_FILE 0x90 FILESIZE 0
endif

else

get FILESIZE asize
log MEMORY_FILE 0 FILESIZE 0

endif

endian little

get NAME basename
string NAME + .dds

get BLANK long -1
get WIDTH short -1
get HEIGHT short -1
get FLAGS1 byte -1
get FLAGS2 byte -1
get FLAGS3 byte -1
get FLAGS4 byte -1
get UNK1 byte -1
get UNK2 byte -1
get UNK3 byte -1
get UNK4 byte -1

get SIZE asize -1
math SIZE - 0x10

savepos OFFSET -1

log MEMORY_FILE2 0 0

set MEMORY_FILE2 binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x80\x00\x00\x00\x80\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x54\x31\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

if FLAGS4 = 0x11 and FLAGS3 = 0x00
set MEMORY_FILE2 binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\xFF\x00\x00\xFF\x00\x00\xFF\x00\x00\x00\x00\x00\x00\xFF\x08\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
elif FLAGS4 = 0x11 and FLAGS3 = 0x10
set MEMORY_FILE2 binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\xFF\x00\x00\xFF\x00\x00\xFF\x00\x00\x00\x00\x00\x00\xFF\x08\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
elif FLAGS4 = 0x11 and FLAGS3 = 0x30
set MEMORY_FILE2 binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x08\x00\x00\x00\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
elif FLAGS4 != 0x11 and FLAGS3 = 0x10
putVarChr MEMORY_FILE2 0x57 0x33 byte
elif FLAGS2 != 0x11 and FLAGS3 = 0x20
putVarChr MEMORY_FILE2 0x57 0x35 byte
elif FLAGS2 != 0x11 and FLAGS3 = 0x70
putVarChr MEMORY_FILE2 0x57 0x35 byte
elif FLAGS2 != 0x11 and FLAGS3 = 0x40
set MEMORY_FILE2 binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x62\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
endif

putVarChr MEMORY_FILE2 0x0C HEIGHT short
putVarChr MEMORY_FILE2 0x10 WIDTH short
putVarChr MEMORY_FILE2 0x14 SIZE long

if FLAGS1 = 0x64
putVarChr MEMORY_FILE2 0x0A 0x0A byte
putVarChr MEMORY_FILE2 0x1C 0x09 byte
putVarChr MEMORY_FILE2 0x6C 0x08 byte
putVarChr MEMORY_FILE2 0x6E 0x40 byte
putVarChr MEMORY_FILE2 0x71 0xFE byte
endif

append
log MEMORY_FILE2 OFFSET SIZE -1
append

get DDSSIZE asize MEMORY_FILE2

log NAME 0 DDSSIZE MEMORY_FILE2

endif