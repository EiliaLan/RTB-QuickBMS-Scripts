# Super Smash Bros. for Wii U / Taiko no Tatsujin Wii U - NUT to GTX/DDS Converter
# Written by Random Talking Bush

endian big

get NTWU long
get VERSION short
get FILETOTAL short
goto 0x10

math PADDINGFIX = 0

for i = 0 < FILETOTAL

if i > 0
math PADDINGFIX += HEADERSIZE
endif

get NAME basename
get FULLSIZE long
get BLANK long
get SIZE long
math DDSSIZE = SIZE
get HEADERSIZE short
get UNKNOWN short
get MIPFLAG short
get DDSFORMAT short
if NTWU == 0x4E545755 or NTWU == 0x4E545744
get WIDTH1 byte
get WIDTH2 byte
get HEIGHT1 byte
get HEIGHT2 byte
endif
if NTWU == 0x4E545033
get WIDTH2 byte
get WIDTH1 byte
get HEIGHT2 byte
get HEIGHT1 byte
endif
get MIPMAPS long
get BLANK long
get OFFSET1 long
math OFFSET1 += 16
get OFFSET2 long
math OFFSET2 += 16
get OFFSET3 long
math OFFSET3 += 16
get BLANK long

if HEADERSIZE == 0x60
get SIZE long
get UNKNOWN short
get UNKNOWN short
get BLANK long
get BLANK long
endif

if HEADERSIZE == 0x70
get SIZE long
get UNKNOWN short
get UNKNOWN short
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
endif

if HEADERSIZE == 0x80
get SIZE long
get UNKNOWN short
get UNKNOWN short
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
endif

if HEADERSIZE == 0x90
get SIZE long
get UNKNOWN short
get UNKNOWN short
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
get BLANK long
endif

get eXt long
get UNKNOWN20 long
get UNKNOWN10 long
get BLANK long
get GIDX long
get UNKNOWN10 long
get TEXCLASS byte
get TEXGROUP byte
get TEXSUBGROUP byte
get TEXINDEX byte
get BLANK long

string NAME += _
string NAME += TEXCLASS
string NAME += _
string NAME += TEXGROUP
string NAME += _
string NAME += TEXSUBGROUP
string NAME += _
string NAME += TEXINDEX

if NTWU == 0x4E545755 or NTWU == 0x4E545744

log MEMORY_FILE 0 0

set MEMORY_FILE binary "\x47\x66\x78\x32\x00\x00\x00\x20\x00\x00\x00\x07\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x4C\x4B\x7B\x00\x00\x00\x20\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x0B\x00\x00\x00\x9C\x00\x00\x00\x00\x00\x00\x00\x00"

if i == 0
math OFFSETHEADER = OFFSET3
endif

if i > 0
math OFFSET1 += PADDINGFIX
math OFFSETHEADER += 0x80
endif

append
log MEMORY_FILE OFFSETHEADER 0x80
append

set MEMORY_FILE2 binary "\x00\x00\x00\x01\x00\x01\x02\x03\x1F\xF8\x7F\x21\xC4\x00\x03\xFF\x06\x88\x80\x00\x00\x00\x00\x0A\x80\x00\x00\x10\x42\x4C\x4B\x7B\x00\x00\x00\x20\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x0C\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

append
log MEMORY_FILE 0 0x3C MEMORY_FILE2
append

putVarChr MEMORY_FILE 0x50 0x00000001 long
putVarChr MEMORY_FILE 0xF0 SIZE long

append
log MEMORY_FILE OFFSET1 SIZE
append

math SIZE += 0xFC

set MEMORY_FILE3 binary "\x42\x4C\x4B\x7B\x00\x00\x00\x20\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

append
log MEMORY_FILE 0 0x20 MEMORY_FILE3
append

get SIZE asize MEMORY_FILE
string NAME + .gtx
log NAME 0 SIZE MEMORY_FILE

endif



if NTWU == 0x4E545033

log MEMORY_FILE 0 0

set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x80\x00\x00\x00\x80\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x54\x31\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

print %DDSFORMAT%

if DDSFORMAT == 2
putVarChr MEMORY_FILE 0x54 0x44585435 long
endif

if DDSFORMAT == 14
# set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x80\x00\x00\x00\x80\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x08\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x80\x00\x00\x00\x80\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\xFF\x00\x00\x00\x08\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
endif

if DDSFORMAT == 17
set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x80\x00\x00\x00\x80\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\xFF\x00\x00\x00\x08\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
endif

if i > 0
math OFFSET1 += PADDINGFIX
endif

append
log MEMORY_FILE OFFSET1 DDSSIZE
append

putVarChr MEMORY_FILE 0x0C HEIGHT1 byte
putVarChr MEMORY_FILE 0x0D HEIGHT2 byte
putVarChr MEMORY_FILE 0x10 WIDTH1 byte
putVarChr MEMORY_FILE 0x11 WIDTH2 byte

get DDSSIZE asize MEMORY_FILE
string NAME + .dds
log NAME 0 DDSSIZE MEMORY_FILE

endif



next i

endfunction