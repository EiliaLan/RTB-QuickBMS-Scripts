# Super Smash Bros. Ultimate - NUTEXB to DDS Converter
# Written by Random Talking Bush with help from Ploaj.
# NOTE: ~16 pixel-height textures which aren't RGBA are currently bugged, I'll have to fix it later.
# Additional, LUT textures will not export fully yet due to lacking a "depth" loop.

set ADDDIMENSIONS 0
set TEXFIX 0

goto -0x08 0 SEEK_END
idstring "TEX\x20"

endian little

goto -0x0C 0 SEEK_END
get SIZE long

goto -0x10 0 SEEK_END
get FACECOUNT long

goto -0x18 0 SEEK_END
get MIPCOUNT long

goto -0x20 0 SEEK_END
get TXFORMAT short

goto -0x24 0 SEEK_END
get DEPTH long

goto -0x28 0 SEEK_END
get HEIGHT long

goto -0x2C 0 SEEK_END
get WIDTH long

goto -0x6C 0 SEEK_END
get TEXNAME string

goto -0xB0 0 SEEK_END
set SIZESPLIT SIZE
math SIZESPLIT / FACECOUNT

savepos OFFSTART
set TEXSTART 0

for i = 0 < FACECOUNT

	goto OFFSTART
	get MIPSIZE long
	math OFFSTART - 0x40

	log MEMORY_FILE 0 0
	log MEMORY_FILE2 0 0
	log MEMORY_FILE3 0 0
	log MEMORY_FILE4 0 0

	set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x54\x31\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

	endian big

	set BITPERPIX 4
	set BLOCKSIZE 512
	set ISCOMPRESSED 1
	set TEXFIX 0

	if TXFORMAT = 0x0100 # R8_UNORM
		set BITPERPIX 8
		set BLOCKSIZE 128
		set ISCOMPRESSED 0
		set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x0F\x10\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x08\x00\x00\x00\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
		print "R8_UNORM TEXTURE (0x0100)"

	elif TXFORMAT = 0x0180 # BC4_UNORM / ATI1 
		putVarChr MEMORY_FILE 0x54 0x41544931 long
		set BITPERPIX 4
		set BLOCKSIZE 512
		print "BC4_UNORM / ATI1 TEXTURE (0x0180)"

	elif TXFORMAT = 0x0185 # BC4_SNORM / ATI1 
		set BITPERPIX 4
		set BLOCKSIZE 512
		set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x51\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
		print "BC4_SNORM / ATI1 TEXTURE (0x0185)"

	elif TXFORMAT = 0x0400 # R8G8B8A8_UNORM / RGBA32
		set BITPERPIX 32
		set BLOCKSIZE 128
		set ISCOMPRESSED 0
		set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x08\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
		print "R8G8B8A8_UNORM TEXTURE (0x0400)"

	elif TXFORMAT = 0x0405 # R8G8B8A8_UNORM_SRGB / RGBA32
		set BITPERPIX 32
		set BLOCKSIZE 128
		set ISCOMPRESSED 0
		set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x08\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
		print "R8G8B8A8_UNORM_SRGB TEXTURE (0x0405)"

	elif TXFORMAT = 0x0434 # R32G32B32A32_FLOAT
		set BITPERPIX 128
		set BLOCKSIZE 512
		set ISCOMPRESSED 0
		set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
		print "R32G32B32A32_FLOAT (0x0434)"

	elif TXFORMAT = 0x0450 # B8G8R8A8_UNORM / BGRA32
		set BITPERPIX 32
		set BLOCKSIZE 128
		set ISCOMPRESSED 0
		set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\xFF\x00\x00\xFF\x00\x00\xFF\x00\x00\x00\x00\x00\x00\xFF\x08\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
		print "B8G8R8A8_UNORM TEXTURE (0x0450)"

	elif TXFORMAT = 0x0455 # B8G8R8A8_UNORM_SRGB / BGRA32
		set BITPERPIX 32
		set BLOCKSIZE 128
		set ISCOMPRESSED 0
		set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x08\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
		print "B8G8R8A8_UNORM_SRGB TEXTURE (0x0455)"

	elif TXFORMAT = 0x0480 # BC1_UNORM / DXT1
		set BITPERPIX 4
		set BLOCKSIZE 512
		print "BC1_UNORM / DXT1 TEXTURE (0x0480)"

	elif TXFORMAT = 0x0485 # BC1_UNORM_SRGB / DXT1
		set BITPERPIX 4
		set BLOCKSIZE 512
		set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x48\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
		print "BC1_UNORM_SRGB / DXT1 TEXTURE (0x0485)"

	elif TXFORMAT = 0x0490 # BC2_UNORM / DXT3
		putVarChr MEMORY_FILE 0x57 0x33 byte
		set BITPERPIX 8
		set BLOCKSIZE 512
		print "BC2_UNORM / DXT3 TEXTURE (0x0490)"

	elif TXFORMAT = 0x0495 # BC2_UNORM_SRGB / DXT3
		set BITPERPIX 8
		set BLOCKSIZE 512
		set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x4B\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
		print "BC2_UNORM_SRGB / DXT3 TEXTURE (0x0495)"

	elif TXFORMAT = 0x04A0 # BC3_UNORM / DXT5
		putVarChr MEMORY_FILE 0x57 0x35 byte
		set BITPERPIX 8
		set BLOCKSIZE 512
		print "BC3_UNORM / DXT5 TEXTURE (0x04A0)"

	elif TXFORMAT = 0x04A5 # BC3_UNORM_SRGB / DXT5
		set BITPERPIX 8
		set BLOCKSIZE 512
		set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x4E\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
		print "BC3_UNORM_SRGB / DXT5 TEXTURE (0x04A5)"

	elif TXFORMAT = 0x04D7 # BC6H_UF16
		set BITPERPIX 8
		set BLOCKSIZE 512
		set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x5F\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
		print "BC6H_UF16 TEXTURE (0x04D7)"

	elif TXFORMAT = 0x04E0 # BC7_UNORM
		set BITPERPIX 8
		set BLOCKSIZE 512
		set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x62\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
		print "BC7_UNORM TEXTURE (0x04E0)"

	elif TXFORMAT = 0x04E5 # BC7_UNORM_SRGB
		set BITPERPIX 8
		set BLOCKSIZE 512
		set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x63\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
		print "BC7_UNORM_SRGB TEXTURE (0x04E5)"

	else
		print "UNKNOWN FORMAT (%TXFORMAT%)"
		if i = 0
			string TEXNAME + .UNKNOWN.
			string TEXNAME + TXFORMAT
		endif
	endif

	math ACTUALWIDTH = WIDTH
	math ACTUALHEIGHT = HEIGHT

	if ISCOMPRESSED = 1
		if BITPERPIX = 4
			math WIDTH x 32
		elif BITPERPIX = 8
			math WIDTH x 16
		endif
	else
		if BITPERPIX = 4
			math WIDTH x 128
		elif BITPERPIX = 8
			math WIDTH x 64
		elif BITPERPIX = 16
			math WIDTH x 32
		elif BITPERPIX = 32
			math WIDTH x 16
		endif
	endif

	if HEIGHT < 8
		set HEIGHT 8
		elif HEIGHT > 8 && HEIGHT < 16
			set HEIGHT 16
		elif HEIGHT > 16 && HEIGHT < 32
			set HEIGHT 32
		elif HEIGHT > 32 && HEIGHT < 64
			set HEIGHT 64
		elif HEIGHT > 64 && HEIGHT < 128
			set HEIGHT 128
		elif HEIGHT > 128 && HEIGHT < 256
			set HEIGHT 256
		elif HEIGHT > 256 && HEIGHT < 512
			set HEIGHT 512
		elif HEIGHT > 512 && HEIGHT < 1024
			set HEIGHT 1024
		elif HEIGHT > 1024 && HEIGHT < 2048
			set HEIGHT 2048
		elif HEIGHT > 2048 && HEIGHT < 4096
			set HEIGHT 4096
		elif HEIGHT > 4096 && HEIGHT < 8192
			set HEIGHT 8192
	endif

	# I really need to troubleshoot the crap outta this.

	if ISCOMPRESSED = 1
		if ACTUALHEIGHT > 32 and ACTUALHEIGHT <= 40
			set TEXFIX 1
		endif

		if ACTUALHEIGHT > 64 and ACTUALHEIGHT <= 84
			set TEXFIX 1
		endif

		if ACTUALHEIGHT > 128 and ACTUALHEIGHT <= 168
			set TEXFIX 1
		endif

		if ACTUALHEIGHT > 256 and ACTUALHEIGHT <= 340
			set TEXFIX 1
		endif
	endif

	if ISCOMPRESSED = 0 and BITPERPIX = 32
		if ACTUALHEIGHT > 8 and ACTUALHEIGHT <= 10
			set TEXFIX 1
		endif

		if ACTUALHEIGHT > 16 and ACTUALHEIGHT <= 22
			set TEXFIX 1
		endif

		if ACTUALHEIGHT > 32 and ACTUALHEIGHT <= 42
			set TEXFIX 1
		endif

		if ACTUALHEIGHT > 64 and ACTUALHEIGHT <= 84
			set TEXFIX 1
		endif
	endif

	if ACTUALWIDTH = WIDTH
		set ADDDIMENSIONS 0
	else
		set ADDDIMENSIONS 1
	endif

	set NAME TEXNAME

	if FACECOUNT > 1
		string NAME + _
		string NAME + i
	endif

	if ADDDIMENSIONS = 1
		string NAME += "("
		string NAME += ACTUALWIDTH
		string NAME += "-"
		string NAME += ACTUALHEIGHT
		string NAME += ")"
	endif

	string NAME + .dds

	set PIXOFFS 0
	set PIXOFFSTART 0
	set BLOCKNUM 0
	set BLOCKS 1

	if HEIGHT > BLOCKSIZE
		math BLOCKS = HEIGHT
		math BLOCKS / BLOCKSIZE
	endif

	math FAKEMIPSIZE = WIDTH
	math FAKEMIPSIZE * HEIGHT
	math FAKEMIPSIZE * BITPERPIX
	math FAKEMIPSIZE / 8
	math ACTUALFILESIZE = WIDTH
	math ACTUALFILESIZE * ACTUALHEIGHT
	math ACTUALFILESIZE * BITPERPIX
	math ACTUALFILESIZE / 8
	math ACTUALFILESIZE + asize MEMORY_FILE
	math NEXTBLOCK = HEIGHT
	if ISCOMPRESSED = 1
		math NEXTBLOCK * 16
	else
		math NEXTBLOCK * 64
	endif
	math BLOCKEND = HEIGHT
	if ISCOMPRESSED = 1
		math BLOCKEND * 16
		if TEXFIX = 1
			math BLOCKEND / 2
		endif
	else
		math BLOCKEND * 64
	endif

	if TEXFIX = 1
		math NEXTBLOCK / 2
	endif

	math NEXTBLOCK - 0x100

	if NEXTBLOCK < 0
		set NEXTBLOCK 0
	endif

	print "Faces = %FACECOUNT% - Mips = %MIPCOUNT% - MipSize = %MIPSIZE% - BlockStart = %NEXTBLOCK% - BlockEnd = %BLOCKEND% - TexSize = %SIZE%"

	putvarchr MEMORY_FILE2 SIZE 0

	math FSIZE = SIZE
	math FSIZE - TEXSTART

	log MEMORY_FILE2 TEXSTART FSIZE
	append
	log MEMORY_FILE2 TEXSTART FSIZE
	append

	endian little
	putVarChr MEMORY_FILE 0x0C ACTUALHEIGHT long
	putVarChr MEMORY_FILE 0x10 WIDTH long
	putVarChr MEMORY_FILE 0x14 ACTUALFILESIZE long
	endian big

	math DATAEND = NEXTBLOCK
	math DATAEND / BLOCKS

	# Don't ask how this is all done, it's pretty much held together with duct tape.

	Do

		math PIXOFFS = PIXOFFSTART
		# print "Offset = %PIXOFFSTART%"

		Do

			for l = 0 < BLOCKS

			if l > 0
				math PIXOFFS - 0x100
				math PIXOFFS + 0x2000
			endif

			append
			log MEMORY_FILE3 PIXOFFS 0x10 MEMORY_FILE2
			math PIXOFFS + 0x20
			log MEMORY_FILE3 PIXOFFS 0x10 MEMORY_FILE2
			math PIXOFFS - 0x20
			append

			math PIXOFFS + 0x100

			append
			log MEMORY_FILE3 PIXOFFS 0x10 MEMORY_FILE2
			math PIXOFFS + 0x20
			log MEMORY_FILE3 PIXOFFS 0x10 MEMORY_FILE2
			math PIXOFFS - 0x20
			append

			if l = 0
				math PIXRET = PIXOFFS
			endif

			next l

			math PIXOFFS = PIXRET
			math PIXOFFS + NEXTBLOCK

		while PIXOFFS < FAKEMIPSIZE

		math BLOCKNUM + 1

		if BLOCKNUM = 1
			math PIXOFFSTART + 0x10
		elif BLOCKNUM = 2
			math PIXOFFSTART + 0x30
		elif BLOCKNUM = 3
			math PIXOFFSTART + 0x10
		elif BLOCKNUM = 4
			math PIXOFFSTART + 0x30
		elif BLOCKNUM = 5
			math PIXOFFSTART + 0x10
		elif BLOCKNUM = 6
			math PIXOFFSTART + 0x30
		elif BLOCKNUM = 7
			math PIXOFFSTART + 0x10
		elif BLOCKNUM = 8
			math PIXOFFSTART + 0x130
			set BLOCKNUM 0
		endif

	while PIXOFFSTART < DATAEND

	if BLOCKS > 1 or ISCOMPRESSED = 0 or TEXFIX = 1

		if ISCOMPRESSED = 1
			math HEIGHTSPLIT = HEIGHT
			math HEIGHTSPLIT / 4
			math HEIGHTSPLIT / BLOCKS
			math LINESIZE = WIDTH
			math LINESIZE * BITPERPIX
			math LINESIZE / 2
			if TEXFIX = 1
				set BLOCKS 2
				math HEIGHTSPLIT / 2
			endif
		else
			math HEIGHTSPLIT = HEIGHT
			if TEXFIX = 1
				set BLOCKS 2
			endif
			math HEIGHTSPLIT / BLOCKS
			math LINESIZE = WIDTH
			math LINESIZE * BITPERPIX
			math LINESIZE / 8
		endif

		for k = 0 < BLOCKS
			math LINESTART = LINESIZE
			math LINESTART * k

			for l = 0 < HEIGHTSPLIT

				append
				log MEMORY_FILE4 LINESTART LINESIZE MEMORY_FILE3
				append

				for m = 0 < BLOCKS
					math LINESTART + LINESIZE
				next m

			next l

		next k

		get TEXSIZE asize MEMORY_FILE4

		append
		log MEMORY_FILE 0 TEXSIZE MEMORY_FILE4
		append

		else

		get TEXSIZE asize MEMORY_FILE3

		append
		log MEMORY_FILE 0 TEXSIZE MEMORY_FILE3
		append

	endif

	get DDSSIZE asize MEMORY_FILE
	log NAME 0 DDSSIZE MEMORY_FILE
	math TEXSTART + SIZESPLIT
	endian little

next i